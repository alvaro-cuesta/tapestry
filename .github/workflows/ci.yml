name: CI

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'
      - 'TODO.md'
  pull_request:
    branches:
      - main
    paths-ignore:
      - 'README.md'
      - 'TODO.md'

jobs:
  lint-tsc:
    name: Lint TypeScript

    runs-on: ubuntu-latest
    steps:
      - &checkout
        name: Check out Git repository
        uses: actions/checkout@v4

      - &setup
        name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: npm

      - &install_deps
        name: Install dependencies
        shell: bash
        run: npm ci

      - name: Run TypeScript Compiler
        run: npm run lint:tsc

  lint-prettier:
    name: Lint Prettier

    runs-on: ubuntu-latest
    steps:
      - *checkout
      - *setup
      - *install_deps

      - name: Run Prettier
        run: npm run lint:prettier

  lint-eslint:
    name: Lint ESLint

    runs-on: ubuntu-latest
    steps:
      - *checkout
      - *setup
      - *install_deps

      - name: Run ESLint
        run: npm run lint:eslint

  lint-knip:
    name: Lint Knip

    runs-on: ubuntu-latest
    steps:
      - *checkout
      - *setup
      - *install_deps

      - name: Run Knip
        run: npm run lint:knip

  lint-madge:
    name: Lint Madge

    runs-on: ubuntu-latest
    steps:
      - *checkout
      - *setup
      - *install_deps

      - name: Run Madge
        run: npm run lint:madge

  build:
    name: Build static files
    needs: [lint-tsc, lint-prettier, lint-eslint, lint-knip, lint-madge]

    runs-on: ubuntu-latest
    steps:
      - *checkout
      - *setup
      - *install_deps

      - name: Infer base path
        id: infer-base-path
        uses: actions/github-script@v7
        with:
          result-encoding: string
          script: |
            const repoName = "${{ github.repository }}".split('/').pop();
            const { data } = await github.request('GET /repos/${{ github.repository }}/pages');
            return data.cname
              ? '/'
              : `/${repoName}/`;
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get Node.js and NPM versions
        id: versions
        run: |
          echo "node_version=$(node --version)" >> $GITHUB_OUTPUT
          echo "npm_version=$(npm --version)" >> $GITHUB_OUTPUT

      - name: Build static files
        env:
          BASE: ${{ steps.infer-base-path.outputs.result }}
        run: |
          npm run build > >(tee build-output.log) 2> >(tee -a build-output.log >&2)

            {
            echo "### Build output"
            echo ""
            echo "- **Node version:** ${{ steps.versions.outputs.node_version }}"
            echo "- **NPM version:** ${{ steps.versions.outputs.npm_version }}"
            echo ""
            echo '```'
            # Strip ANSI colors and escape any triple backticks in the output
            sed 's/\x1b\[[0-9;]*m//g' build-output.log | sed 's/```/``\x60`/g'
            echo '```'
            echo ""
            } >> $GITHUB_STEP_SUMMARY

      - name: Upload static files as artifact
        id: deployment
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist/

  deploy:
    if: github.repository == 'alvaro-cuesta/tapestry'
    name: Deploy to GitHub Pages
    needs: build

    permissions:
      pages: write # to deploy to Pages
      id-token: write # to verify the deployment originates from an appropriate source

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
